// Generated by view binder compiler. Do not edit!
package com.example.tm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSignUpBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button ButtonBackToLogIn;

  @NonNull
  public final Button ButtonSignUp;

  @NonNull
  public final EditText EntryEmailSignUp;

  @NonNull
  public final EditText EntryNameSignUp;

  @NonNull
  public final EditText EntryPassConfSignUp;

  @NonNull
  public final EditText EntryPasswordSignUp;

  @NonNull
  public final TextView textViewSignUp;

  private FragmentSignUpBinding(@NonNull LinearLayout rootView, @NonNull Button ButtonBackToLogIn,
      @NonNull Button ButtonSignUp, @NonNull EditText EntryEmailSignUp,
      @NonNull EditText EntryNameSignUp, @NonNull EditText EntryPassConfSignUp,
      @NonNull EditText EntryPasswordSignUp, @NonNull TextView textViewSignUp) {
    this.rootView = rootView;
    this.ButtonBackToLogIn = ButtonBackToLogIn;
    this.ButtonSignUp = ButtonSignUp;
    this.EntryEmailSignUp = EntryEmailSignUp;
    this.EntryNameSignUp = EntryNameSignUp;
    this.EntryPassConfSignUp = EntryPassConfSignUp;
    this.EntryPasswordSignUp = EntryPasswordSignUp;
    this.textViewSignUp = textViewSignUp;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ButtonBackToLogIn;
      Button ButtonBackToLogIn = ViewBindings.findChildViewById(rootView, id);
      if (ButtonBackToLogIn == null) {
        break missingId;
      }

      id = R.id.ButtonSignUp;
      Button ButtonSignUp = ViewBindings.findChildViewById(rootView, id);
      if (ButtonSignUp == null) {
        break missingId;
      }

      id = R.id.EntryEmailSignUp;
      EditText EntryEmailSignUp = ViewBindings.findChildViewById(rootView, id);
      if (EntryEmailSignUp == null) {
        break missingId;
      }

      id = R.id.EntryNameSignUp;
      EditText EntryNameSignUp = ViewBindings.findChildViewById(rootView, id);
      if (EntryNameSignUp == null) {
        break missingId;
      }

      id = R.id.EntryPassConfSignUp;
      EditText EntryPassConfSignUp = ViewBindings.findChildViewById(rootView, id);
      if (EntryPassConfSignUp == null) {
        break missingId;
      }

      id = R.id.EntryPasswordSignUp;
      EditText EntryPasswordSignUp = ViewBindings.findChildViewById(rootView, id);
      if (EntryPasswordSignUp == null) {
        break missingId;
      }

      id = R.id.textViewSignUp;
      TextView textViewSignUp = ViewBindings.findChildViewById(rootView, id);
      if (textViewSignUp == null) {
        break missingId;
      }

      return new FragmentSignUpBinding((LinearLayout) rootView, ButtonBackToLogIn, ButtonSignUp,
          EntryEmailSignUp, EntryNameSignUp, EntryPassConfSignUp, EntryPasswordSignUp,
          textViewSignUp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
